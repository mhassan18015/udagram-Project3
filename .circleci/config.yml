version: 2.1
orbs:
  # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
  node: circleci/node@4.1.0
  aws-cli: circleci/aws-cli@2.0.3
  aws-elastic-beanstalk: circleci/aws-elastic-beanstalk@2.0.0
  # different jobs are calles later in the workflows sections
jobs:
  build:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/base:stable"
    steps:
      - node/install:
          node-version: 12.22.1
      - checkout
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_DEFAULT_REGION
          profile-name: AWS_PROFILE
        
      - aws-elastic-beanstalk/setup
      # install dependencies in both apps
      - run:
          name: Front-End install
          command: |
            npm run frontend:install
      - run:
          name: Back-End install
          command: |
            npm run api:install
      # Build front and back end apps
      - run:
          name: Front-End Build
          command: |
            npm run frontend:build
      - run:
          name: Back-End Build
          command: |
            npm run api:build
      # Build front and back end apps
      - run:
          name: set env
          command: |
            cd udagram-api && eb setenv POSTGRES_HOST=$POSTGRES_HOST POSTGRES_USERNAME=$POSTGRES_USERNAME POSTGRES_PASSWORD=$POSTGRES_PASSWORD POSTGRES_DB=$POSTGRES_DB DB_PORT=$DB_PORT PORT=$PORT JWT_SECRET=$JWT_SECRET URL=$URL AWS_BUCKET=$AWS_BUCKET AWS_REGION=$AWS_REGION AWS_PROFILE=$AWS_PROFILE
      # Deploy front and back end apps
      - run:
          name: Back-End deploy
          command: |
            npm run api:deploy
      - run:
          name: Front-End deploy
          command: |
            npm run frontend:deploy

      